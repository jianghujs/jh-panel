#!/bin/bash

# 检查锁
if [ -e $LOCK_FILE_PATH ]; then
    # 计算锁时间差
    LOCK_TIMESTAMP=$(cat $LOCK_FILE_PATH)
    CURRENT_TIMESTAMP=$(date +%s)
    TIME_DIFF=$(($CURRENT_TIMESTAMP - $LOCK_TIMESTAMP))
    # 判断时间差是否超过20分钟（20*60=1200秒）
    if [ $TIME_DIFF -gt 1200 ]; then
        echo "锁已失效"
    else
        echo "已有任务在执行，请稍后重试"
        exit
    fi
fi

# 加锁
echo $(date +%s) > $LOCK_FILE_PATH

if [ ! -d "$BACKUP_BASE_PATH" ];then
    echo "未检测到全量备份目录，请先执行全量备份"
    exit
fi

timestamp=$(date +%Y%m%d_%H%M%S)
# 临时设置系统的打开文件数量上限
ulimit -n 65535
LOG_DIR=/www/server/xtrabackup-inc/logs
systemctl stop $MYSQL_NAME
mv $MYSQL_DIR/data $MYSQL_DIR/data_$timestamp
mkdir -p /www/server/xtrabackup-inc/logs
# 复制全量目录
rsync -a --delete $BACKUP_BASE_PATH/ /www/backup/xtrabackup_data_restore/
# 合并增量内容
if [ -d "$BACKUP_INC_PATH" ];then
    xtrabackup --prepare --apply-log-only --target-dir=/www/backup/xtrabackup_data_restore &>> $LOG_DIR/recovery_$timestamp.log
    xtrabackup --prepare --apply-log-only --target-dir=/www/backup/xtrabackup_data_restore --incremental-dir=$BACKUP_INC_PATH &>> $LOG_DIR/recovery_$timestamp.log
fi
# 执行恢复
xtrabackup --copy-back --target-dir=/www/backup/xtrabackup_data_restore &>> $LOG_DIR/recovery_$timestamp.log
chown -R mysql:mysql $MYSQL_DIR/data 
chmod -R 755 $MYSQL_DIR/data
systemctl start $MYSQL_NAME

# 解锁
rm -f $LOCK_FILE_PATH

python3 /www/server/jh-panel/scripts/clean.py $LOG_DIR